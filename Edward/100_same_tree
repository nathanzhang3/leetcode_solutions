# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def isSameTree(self, p, q):
        """
        :type p: TreeNode
        :type q: TreeNode
        :rtype: bool
        """
        if p == None and q == None:
            return True
        root = TreeNode(0)
        root.left = p
        root.right = q
        stack = [[root.left, root.right]]
        while len(stack) > 0:
            pair = stack.pop(0)
            left = pair[0]
            right = pair[1]
            if left == None and right == None:
                continue;
            try:
                if (left.val != right.val):
                    return False
            except:
                return False
            if left.val == right.val:
                if left.left or right.left:
                    stack.insert(0, [left.left, right.left])
                if left.right or right.right:
                    stack.insert(0, [left.right, right.right])
        return True
